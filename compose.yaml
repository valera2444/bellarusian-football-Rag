services:
  db:
    image: pgvector/pgvector:pg17 # PostgreSQL with pgvector support
    container_name: pgvector-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      
    ports:
      - "5432:5432"
    volumes:
     - ./pgdata:/var/lib/postgresql/data

  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0

    volumes:
    - ./ollama/ollama:/root/.ollama
    - ./ollama_entrypoint.sh:/entrypoint.sh

    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  fastapi:
    build:
      dockerfile: ./Dockerfile
    
    depends_on:
      - ollama
      - db
    ports:
      - "5050:5050"
    environment:
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - /home/valeriy/python_projects/RAG/data/txts/cleaned.txt:/data/cleaned.txt
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

